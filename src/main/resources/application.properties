spring.datasource.url=jdbc:postgresql://localhost:9000/trabago
spring.datasource.username=postgres
spring.datasource.password=postgres
spring.jpa.properties.hibernate.jdbc.lob.non_contextual_creation=true
spring.jpa.properties.hibernate.naming.physical-strategy:org.hibernate.boot.model.naming.CamelCaseToUnderscoresNamingStrategy
spring.jpa.properties.hibernate.naming..implicit-strategy:org.springframework.boot.orm.jpa.hibernate.SpringImplicitNamingStrategy
spring.jpa.hibernate.ddl-auto=update
spring.application.name=trabago
spring.security.oauth2.client.registration.google.clientId=796572977789-in7lo419ahvs7565rfq58rm28v2qe3ru.apps.googleusercontent.com
spring.security.oauth2.client.registration.google.clientSecret=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
spring.security.oauth2.client.registration.google.scope=profile,email

spring.security.oauth2.client.registration.linkedin.clientId=77i7detpzld0ic
spring.security.oauth2.client.registration.linkedin.clientSecret=UMuNgLreIEnKqubb
spring.security.oauth2.client.registration.linkedin.clientAuthenticationMethod = client_secret_post
spring.security.oauth2.client.registration.linkedin.authorizationGrantType = authorization_code
spring.security.oauth2.client.registration.linkedin.redirectUri={baseUrl}/login/oauth2/code/{registrationId}
spring.security.oauth2.client.registration.linkedin.scope: email, profile, openid
spring.security.oauth2.client.registration.linkedin.clientName: Linkedin

spring.security.oauth2.client.provider.linkedin.authorizationUri: https://www.linkedin.com/oauth/v2/authorization
spring.security.oauth2.client.provider.linkedin.tokenUri: https://www.linkedin.com/oauth/v2/accessToken
spring.security.oauth2.client.provider.linkedin.userInfoUri: https://api.linkedin.com/v2/me
spring.security.oauth2.client.provider.linkedin.userNameAttribute: id

spring.security.oauth2.client.registration.github.clientId=4f14a2db74cb6bc2e19d
spring.security.oauth2.client.registration.github.clientSecret=654a6a5cba5e9b280a71ac8e14e5e405fbe3139d
spring.security.oauth2.client.registration.github.scope=read:user, user:email


app.jwt.secret=eyJhbGciOiJIUzI1NiJ9.eyJSb2xlIjoiQWRtaW4iLCJJc3N1ZXIiOiJJc3N1ZXIiLCJVc2VybmFtZSI6IkphdmFJblVzZSIsImV4cCI6MTcwMjY2NjI5MywiaWF0IjoxNzAyNjY2MjkzfQ.CjaTYTj565SzTAxLYf8qFrQKlm_PAi74kwtCX2u4uZo
app.jwt.expiration.minutes=10
app.oauth2.redirectUri=http://localhost:3000/oauth2/redirect
app.cors.allowedOrigins=http://localhost:3000
logging.level.org.springframework.security=DEBUG
spring.jackson.serialization.write-dates-as-timestamps=false